setwd("~/Desktop/FiguresINSPEcT/Giacomo/")
dt_prova <- read.table("Ctl.txt", header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5)
library(tidyr)
library(dplyr)
library(ggplot2)
#importo il dataset
dt_prova <- read.table("Ctl.txt", header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="Control.pdf",g1,width=3,height=5)
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="Control1.pdf",g1,width=3,height=5)
setwd("~/Desktop/untitled folder/")
files <- list.files(path = ".", pattern=".txt")
files
dt_prova <- read.table(files[1], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="Control1.pdf",g1,width=3,height=5)
dt_prova <- read.table(files[2], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="Control2.pdf",g1,width=3,height=5)
dt_prova <- read.table(files[3], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="Control3.pdf",g1,width=3,height=5)
dt_prova <- read.table(files[4], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="Harringtonine1.pdf",g1,width=3,height=5)
files
dt_prova <- read.table(files[5], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="Leptomycin1.pdf",g1,width=3,height=5)
dt_prova <- read.table(files[6], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="Leptomycin2.pdf",g1,width=3,height=5)
dt_prova <- read.table(files[7], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="Pladienolide1.pdf",g1,width=3,height=5)
dt_prova <- read.table(files[8], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="Pladienolide2.pdf",g1,width=3,height=5)
files <- list.files(path = ".", pattern=".txt")
files
dt_prova <- read.table(files[5], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="Harringtonine2.pdf",g1,width=3,height=5)
ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))
files <- list.files(path = ".", pattern=".txt")
files
dt_prova <- read.table(files[1], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="Control1.pdf",g1,width=5,height=5)
dt_prova <- read.table(files[2], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="Control2.pdf",g1,width=5,height=5)
dt_prova <- read.table(files[3], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="Control3.pdf",g1,width=5,height=5)
files
dt_prova <- read.table(files[4], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="Harringtonine1.pdf",g1,width=5,height=5)
dt_prova <- read.table(files[5], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="Harringtonine2.pdf",g1,width=5,height=5)
files
dt_prova <- read.table(files[6], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="Leptomycin1.pdf",g1,width=5,height=5)
dt_prova <- read.table(files[7], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="Leptomycin2.pdf",g1,width=5,height=5)
dt_prova <- read.table(files[8], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="PladeniolideB1.pdf",g1,width=5,height=5)
#importo il dataset
dt_prova <- read.table(files[9], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25))  #sposto il nome
ggsave(file="PladeniolideB2.pdf",g1,width=5,height=5)
ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25),text = element_text(size = 10))
ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25),text = element_text(size = 20))
ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25),text = element_text(size = 20))
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25),text = element_text(size = 20))  #sposto il nome
ggsave(file="PladeniolideB2.pdf",g1,width=5,height=5)
dt_prova <- read.table(files[8], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25),text = element_text(size = 20))  #sposto il nome
ggsave(file="PladeniolideB1.pdf",g1,width=5,height=5)
dt_prova <- read.table(files[1], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25),text = element_text(size = 20))  #sposto il nome
ggsave(file="Control1.pdf",g1,width=5,height=5)
dt_prova <- read.table(files[2], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25),text = element_text(size = 20))  #sposto il nome
ggsave(file="Control2.pdf",g1,width=5,height=5)
dt_prova <- read.table(files[3], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25),text = element_text(size = 20))  #sposto il nome
ggsave(file="Control3.pdf",g1,width=5,height=5)
fles
files
dt_prova <- read.table(files[4], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25),text = element_text(size = 20))  #sposto il nome
ggsave(file="Harringtonine1.pdf",g1,width=5,height=5)
dt_prova <- read.table(files[5], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25),text = element_text(size = 20))  #sposto il nome
ggsave(file="Harringtonine5.pdf",g1,width=5,height=5)
dt_prova <- read.table(files[6], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25),text = element_text(size = 20))  #sposto il nome
ggsave(file="Leptomycin1.pdf",g1,width=5,height=5)
dt_prova <- read.table(files[7], header = T, sep = "\t")
dt_prova <- dt_prova %>%
select(c(1,2)) %>%      #mantengo solo colonna tempo e assorbanza
rename(Time = Time..min... , AU = UV..A.U...) %>%   #rinomino le colonne
filter(Time >= 1.500 & Time <= 10.5) #scarto i valori estremi non informativi
#creo il grafico con ggplot
g1 <- ggplot(data = dt_prova,
aes(x = Time, y = AU)) +
geom_line() +
theme_classic() +
scale_x_discrete(limits = c(1:10)) +    #creo la scala dell'asse x
xlab("Fraction") +                      #rinomino l'asse x
theme(axis.title.x = element_text(vjust = 0.25),text = element_text(size = 20))  #sposto il nome
ggsave(file="Leptomycin2.pdf",g1,width=5,height=5)
